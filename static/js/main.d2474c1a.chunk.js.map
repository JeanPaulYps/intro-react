{"version":3,"sources":["TodoContext/index.js","TodoCounter/index.js","TodoSearch/index.js","TodoModal/Modal.js","TodoModal/index.js","TodoTask/index.js","TodoTaskList/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","initialTodoList","todosLocalStorageName","localStorage","getItem","setItem","JSON","parse","useState","todos","setTodos","openModal","setOpenModal","searchText","setSearchText","searchedTodos","filter","todo","description","toLowerCase","includes","completedTodos","Todo","completed","length","totalTodos","Provider","value","checkTask","taskDescription","indexOfTask","findIndex","statusOftask","newTodos","stringify","deleteTask","addTask","newTodo","children","TodoCounter","useContext","class","TodoSearch","className","id","src","process","alt","type","placeholder","onChange","event","target","onClick","prevState","Modal","setTaskDescription","onClickCloseButton","onSubmit","name","TodoModal","ReactDom","createPortal","document","getElementById","TodoTask","checked","isDone","width","TodoTaskList","todoTask","markTaskAsDone","AppUI","map","App","ReactDOM","render"],"mappings":"+SAEMA,EAAcC,IAAMC,gBAE1B,SAASC,EAAcC,GAEnB,IAAIC,EAAkB,GAChBC,EAAwB,WACsB,OAAhDC,aAAaC,QAAQF,GAEvBC,aAAaE,QAAQH,EAAuB,OAG5CD,EAAkBE,aAAaC,QAAQF,GACvCD,EAAkBK,KAAKC,MAAMN,IAG/B,MAA0BJ,IAAMW,SAAUP,GAA1C,mBAAOQ,EAAP,KAAcC,EAAd,KAEA,EAAmCb,IAAMW,UAAS,GAAlD,mBAAOG,EAAP,KAAkBC,EAAlB,KA4BA,EAAoCf,IAAMW,SAAS,IAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAgBN,EAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKC,YAAYC,cAAcC,SAASP,EAAWM,kBAG1FE,EAAiBZ,EAAMO,QAAQ,SAAAM,GAAI,OAAIA,EAAKC,aAAWC,OACvDC,EAAahB,EAAMe,OAEzB,OACI,cAAC5B,EAAY8B,SAAb,CAAsBC,MAAU,CAC9BN,iBACAI,aACAd,YACAC,eACAH,QACAC,WACAkB,UA1CY,SAACC,GACf,IAAMC,EAAcrB,EAAMsB,WAAU,SAAAd,GAAI,OAAIA,EAAKC,cAAgBW,KAC3DG,EAAevB,EAAMqB,GAAaP,UACpCU,EAAQ,YAAOxB,GACnBwB,EAASH,GAAaP,WAAaS,EACnCtB,EAASuB,GACT9B,aAAaE,QAAQH,EAAuBI,KAAK4B,UAAUD,KAqCzDE,WAlCa,SAACN,GAClB,IAAII,EAAWxB,EAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKC,cAAgBW,KAC3DnB,EAASuB,GACT9B,aAAaE,QAAQH,EAAuBI,KAAK4B,UAAUD,KAgCvDpB,aACAC,gBACAC,gBACAqB,QAhCU,SAACP,GAEb,IAAMQ,EAAU,CACZnB,YAAaW,EACbN,WAAW,GAEXU,EAAQ,sBAAOxB,GAAP,CAAc4B,IAC1B3B,EAASuB,GACT9B,aAAaE,QAAQH,EAAuBI,KAAK4B,UAAUD,MAY3D,SAcKjC,EAAMsC,W,MClEnB,SAASC,IACL,MAAuC1C,IAAM2C,WAAW5C,GAAhD6B,EAAR,EAAQA,WAAYJ,EAApB,EAAoBA,eAEpB,OACI,qBAAIoB,MAAM,QAAV,4BAAkCpB,EAAlC,OAAsDI,EAAtD,c,MCJR,SAASiB,IAEL,MAAwC7C,IAAM2C,WAAW5C,GAAjDgB,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,cAYtB,OACI,sBAAK6B,UAAU,SAASC,GAAG,OAA3B,UACI,sBAAKD,UAAU,eAAf,UACI,qBAAKE,IAAKC,8BAA4CC,IAAI,GAAGJ,UAAU,iBACvE,uBAAOK,KAAK,SAASJ,GAAG,aAAaD,UAAU,gBAAgBM,YAAY,yBAAsBC,SATpF,SAACC,GAEtBrC,EAAcqC,EAAMC,OAAOzB,aASvB,qBAAKkB,IAAKC,4BAA0CC,IAAI,GAAGJ,UAAU,qBAAqBC,GAAG,YAAYS,QAhB3F,WAElBzC,GAAc,SAAA0C,GAAS,OAAKA,W,MCNpC,SAASC,EAAMvD,GACX,IAAOoC,EAAWvC,IAAM2C,WAAW5C,GAA5BwC,QACP,EAA8CvC,IAAMW,SAAS,IAA7D,mBAAOqB,EAAP,KAAwB2B,EAAxB,KAEMC,EAAqB,WAEvBzD,EAAMY,cAAc,SAAA0C,GAAS,OAAKA,MAgBtC,OACI,qBAAKX,UAAU,QAAQC,GAAG,QAA1B,SACI,sBAAKD,UAAU,iBAAf,UACI,qBAAKE,IAAKC,+BAA6CC,IAAI,GAAGM,QAAWI,EAAqBd,UAAU,2BACxG,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,oBAAb,oCACA,uBAAMe,SAAUtB,EAAhB,UACI,0BAAUO,UAAU,uBAAuBgB,KAAK,kBAAkBT,SAb1D,SAACC,GAEzBK,EAAmBL,EAAMC,OAAOzB,UAahB,sBAAKgB,UAAU,sBAAf,UACI,wBAAQA,UAAU,qBAAqBK,KAAK,SAASK,QAAUI,EAA/D,sBACA,wBAAQd,UAAU,qBAAqBK,KAAK,SAASK,QAxBxD,SAACF,GAElBf,EAAQP,GACR7B,EAAMY,cAAc,SAAA0C,GAAS,OAAKA,MAqBd,2CChC5B,SAASM,EAAW5D,GAEhB,OAAO6D,IAASC,aACZ,cAAC,EAAD,CAAOlD,aAAgBZ,EAAMY,eAC7BmD,SAASC,eAAe,U,MCLhC,SAASC,EAASjE,GACd,MAAkCH,IAAM2C,WAAW5C,GAA3CgC,EAAR,EAAQA,UAAWO,EAAnB,EAAmBA,WACnB,OACQ,sBAAKQ,UAAU,OAAf,UACI,qBAAKE,IAAKC,6BAA2CC,IAAI,GAAGJ,UAAU,kBAAkBU,QAAU,kBAAMzB,EAAU5B,EAAM6B,oBACxH,uBAAOY,MAAM,cAAcO,KAAK,WAAWrB,MAAM,GAAGuC,QAASlE,EAAMmE,SACnE,qBAAKxB,UAAU,oBAAf,SACI,4BAAI3C,EAAM6B,oBAEd,qBAAKgB,IAAKC,8BAA4CC,IAAI,GAAGqB,MAAM,OAAOzB,UAAU,mBAAmBU,QAAW,kBAAMlB,EAAWnC,EAAM6B,uB,MCVzJ,SAASwC,EAAcrE,GACnB,OACI,qBAAK2C,UAAU,iBAAf,SACI,cAAC,EAAD,CAAWd,gBAAmB7B,EAAMsE,SAASpD,YAAaiD,OAAUnE,EAAMsE,SAAS/C,UAAWgD,eAAkBvE,EAAMuE,mBCClI,SAASC,IACL,MAII3E,IAAM2C,WAAW5C,GAJbe,EAAR,EAAQA,UACJC,EADJ,EACIA,aACAG,EAFJ,EAEIA,cACAa,EAHJ,EAGIA,UAKJ,OACI,gCACI,cAACW,EAAD,IACA,cAAC,EAAD,IAECxB,EAAc0D,KAAK,SAACxD,GACb,OAAO,cAAC,EAAD,CAAcqD,SAAUrD,EAAMsD,eAAgB3C,OAG5DjB,GAAa,cAACiD,EAAD,CAAWhD,aAAcA,OCrBnD,SAAS8D,IAEP,OACI,cAAC3E,EAAD,UACE,cAACyE,EAAD,MCHRG,IAASC,OACL,cAACF,EAAD,IACFX,SAASC,eAAe,W","file":"static/js/main.d2474c1a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider (props)\r\n{\r\n    let initialTodoList = [];\r\n    const todosLocalStorageName = 'TODOS_V1';\r\n    if (localStorage.getItem(todosLocalStorageName) === null)\r\n    {\r\n      localStorage.setItem(todosLocalStorageName, \"[]\");\r\n    } else \r\n    {\r\n      initialTodoList = localStorage.getItem(todosLocalStorageName); \r\n      initialTodoList = JSON.parse(initialTodoList);\r\n    }\r\n\r\n    const [todos, setTodos] = React.useState( initialTodoList );\r\n  \r\n    const [openModal, setOpenModal ] = React.useState(false);\r\n  \r\n    const checkTask = (taskDescription)=>{\r\n        const indexOfTask = todos.findIndex(todo => todo.description === taskDescription);\r\n        const statusOftask = todos[indexOfTask].completed;\r\n        let newTodos = [...todos];\r\n        newTodos[indexOfTask].completed = !statusOftask;\r\n        setTodos(newTodos);\r\n        localStorage.setItem(todosLocalStorageName, JSON.stringify(newTodos));\r\n    }\r\n\r\n    const deleteTask = (taskDescription)=>{\r\n      let newTodos = todos.filter((todo) => todo.description !== taskDescription);\r\n      setTodos(newTodos);\r\n      localStorage.setItem(todosLocalStorageName, JSON.stringify(newTodos));\r\n    }\r\n\r\n    const addTask = (taskDescription) => \r\n    {\r\n        const newTodo = {\r\n            description: taskDescription,\r\n            completed: false\r\n        }\r\n        let newTodos = [...todos, newTodo]\r\n        setTodos(newTodos);\r\n        localStorage.setItem(todosLocalStorageName, JSON.stringify(newTodos));\r\n    }\r\n\r\n    const [searchText, setSearchText] = React.useState('');\r\n\r\n    const searchedTodos = todos.filter((todo) => todo.description.toLowerCase().includes(searchText.toLowerCase()));\r\n\r\n\r\n    const completedTodos = todos.filter( Todo => Todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    return(\r\n        <TodoContext.Provider value = { {\r\n          completedTodos,\r\n          totalTodos,\r\n          openModal,\r\n          setOpenModal,\r\n          todos,\r\n          setTodos,\r\n          checkTask,\r\n          deleteTask,\r\n          searchText,\r\n          setSearchText,\r\n          searchedTodos,\r\n          addTask\r\n        } }>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './todoCounter.css'\r\n\r\nfunction TodoCounter (){\r\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\r\n\r\n    return (\r\n        <h1 class=\"Title\">Haz completado {completedTodos} de {totalTodos} tareas </h1>\r\n    );\r\n}\r\n\r\nexport { TodoCounter, };\r\n","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoSearch.css'\r\n\r\nfunction TodoSearch (){\r\n\r\n    const { setOpenModal, setSearchText } = React.useContext(TodoContext);\r\n    \r\n    const onClickButton = ()=>\r\n    {\r\n        setOpenModal( prevState => !prevState )\r\n    }\r\n\r\n    const onChangeInSearch = (event) =>\r\n    {\r\n        setSearchText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Search\" id=\"test\">\r\n            <div className=\"Search__Form\" >\r\n                <img src={process.env.PUBLIC_URL + \"/searchIcon.svg\"} alt=\"\" className=\"Search__Icon\"/>\r\n                <input type=\"search\" id=\"SearchForm\" className=\"Search__Input\" placeholder=\"Busca tu tarea aquÃ­\" onChange = {onChangeInSearch} />\r\n            </div>\r\n            <img src={process.env.PUBLIC_URL + \"/plusIcon.svg\"} alt=\"\" className=\"Search__PlusButton\" id=\"AddButton\" onClick = {onClickButton} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { TodoSearch, };\r\n","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './Modal.css';\r\n\r\nfunction Modal(props) {\r\n    const {addTask} = React.useContext(TodoContext);\r\n    const [taskDescription, setTaskDescription ]= React.useState('');\r\n\r\n    const onClickCloseButton = () => \r\n    {\r\n        props.setOpenModal( prevState => !prevState )\r\n    }\r\n\r\n    const handleSubmit = (event) => \r\n    {\r\n        addTask(taskDescription);\r\n        props.setOpenModal( prevState => !prevState);\r\n        \r\n    }\r\n\r\n    const saveTaskDescription = (event) =>\r\n    {\r\n        setTaskDescription(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Modal\" id=\"modal\">\r\n            <div className=\"Modal__Content\">\r\n                <img src={process.env.PUBLIC_URL + \"/closeButton.svg\"} alt=\"\" onClick= { onClickCloseButton } className=\"Modal__CloseButtonIcon\"/>\r\n                <div className=\"CreateTodo\">\r\n                    <p className=\"CreateTodo__Title\">Escribe un nuevo To-Do</p>\r\n                    <form onSubmit={addTask}> \r\n                        <textarea className=\"CreateTodo__TextArea\" name=\"todoDescription\" onChange={saveTaskDescription}>\r\n                        </textarea>\r\n                        <div className=\"CreateTodo__Buttons\">\r\n                            <button className=\"CreateTodo__Cancel\" type=\"button\" onClick={ onClickCloseButton }>Cancelar</button>\r\n                            <button className=\"CreateTodo__Accept\" type=\"button\" onClick={ handleSubmit }  > Agregar tarea </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Modal, };","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport  { Modal } from './Modal'\r\n\r\n\r\nfunction TodoModal (props)\r\n{\r\n    return ReactDom.createPortal(\r\n        <Modal setOpenModal = {props.setOpenModal} /> ,\r\n        document.getElementById('Modal')\r\n    );   \r\n}\r\n\r\nexport { TodoModal, };","import { TodoContext } from '../TodoContext';\r\nimport React from 'react';\r\nimport './TodoTask.css'\r\n\r\nfunction TodoTask(props) {\r\n    const { checkTask, deleteTask } = React.useContext(TodoContext);\r\n    return (\r\n            <div className=\"Task\">\r\n                <img src={process.env.PUBLIC_URL + '/checkIcon.svg'} alt=\"\" className=\"Task__CheckIcon\" onClick={ () => checkTask(props.taskDescription) }/>\r\n                <input class=\"Task__Check\" type=\"checkbox\" value=\"\" checked={props.isDone}/>\r\n                <div className=\"Task__Description\">\r\n                    <p>{props.taskDescription}</p>\r\n                </div>\r\n                <img src={process.env.PUBLIC_URL + '/deleteIcon.svg'} alt=\"\" width=\"10px\" className=\"Task__DeleteIcon\" onClick = {() => deleteTask(props.taskDescription)} />\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport { TodoTask, };","import { TodoTask } from '../TodoTask';\r\nimport './TodoTaskList.css'\r\n\r\nfunction TodoTaskList (props){\r\n    return(\r\n        <div className=\"TasksContainer\">\r\n            <TodoTask  taskDescription = {props.todoTask.description} isDone = {props.todoTask.completed} markTaskAsDone = {props.markTaskAsDone} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { TodoTaskList, };","import { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { TodoModal } from '../TodoModal';\r\nimport { TodoTaskList } from '../TodoTaskList';\r\nimport React from 'react';\r\n\r\nfunction AppUI() {\r\n    const { openModal,\r\n        setOpenModal,\r\n        searchedTodos,\r\n        checkTask\r\n    } = React.useContext(TodoContext);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n    \r\n            {searchedTodos.map( (todo) => {\r\n                    return <TodoTaskList todoTask={todo} markTaskAsDone={checkTask} />;\r\n                })\r\n            }\r\n            {openModal && <TodoModal setOpenModal={setOpenModal} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { AppUI, };","import { AppUI } from './AppUI';\r\nimport { TodoProvider } from '../TodoContext';\r\nimport React from 'react';\r\n\r\nfunction App ()\r\n{\r\n  return(\r\n      <TodoProvider>\r\n        <AppUI/>\r\n      </TodoProvider>\r\n  );\r\n};\r\n\r\nexport { App, } ;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport  { App }  from './App/index';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n "],"sourceRoot":""}