{"version":3,"sources":["TodoContext/index.js","TodoCounter/index.js","TodoSearch/index.js","TodoModal/Modal.js","TodoModal/index.js","TodoTask/index.js","TodoTaskList/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","useState","description","completed","todos","setTodos","openModal","setOpenModal","searchedTodos","setSearchedTodos","completedTodos","filter","Todo","length","totalTodos","Provider","value","checkTask","taskDescription","indexOfTask","findIndex","todo","statusOftask","newTodos","deleteTask","searchTodos","searchText","newSearchedTodos","toLowerCase","includes","children","TodoCounter","useContext","class","TodoSearch","className","id","src","process","alt","type","placeholder","onChange","event","target","console","log","onClick","prevState","Modal","TodoModal","ReactDom","createPortal","document","getElementById","TodoTask","checked","isDone","width","TodoTaskList","todoTask","markTaskAsDone","AppUI","map","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.d86b365d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider (props)\r\n{\r\n    \r\n\r\n    const [todos, setTodos] = React.useState(\r\n      [ \r\n        {\r\n          description: \"Cortar cebollas\",\r\n          completed: false\r\n        },\r\n        {\r\n          description: \"Sacar basura\",\r\n          completed: false\r\n        },\r\n        {\r\n          description: \"Sacar el perro\",\r\n          completed: true\r\n        },\r\n      ]\r\n    )\r\n  \r\n    const [openModal, setOpenModal ] = React.useState(false);\r\n  \r\n    const checkTask = (taskDescription)=>{\r\n        const indexOfTask = todos.findIndex(todo => todo.description === taskDescription);\r\n        const statusOftask = todos[indexOfTask].completed;\r\n        let newTodos = [...todos];\r\n        newTodos[indexOfTask].completed = !statusOftask;\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const deleteTask = (taskDescription)=>{\r\n      let newTodos = todos.filter((todo) => todo.description !== taskDescription);\r\n      setTodos(newTodos);\r\n    }\r\n\r\n    const [searchedTodos, setSearchedTodos] = React.useState(todos);\r\n\r\n    const searchTodos = (searchText) => {\r\n      const newSearchedTodos = todos.filter((todo) => todo.description.toLowerCase().includes(searchText.toLowerCase()));\r\n      setSearchedTodos(newSearchedTodos);\r\n    }\r\n\r\n    const completedTodos = todos.filter( Todo => Todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    return(\r\n        <TodoContext.Provider value = { {\r\n          completedTodos,\r\n          totalTodos,\r\n          openModal,\r\n          setOpenModal,\r\n          todos,\r\n          setTodos,\r\n          checkTask,\r\n          deleteTask,\r\n          searchTodos,\r\n          searchedTodos\r\n        } }>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './todoCounter.css'\r\n\r\nfunction TodoCounter (){\r\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\r\n\r\n    return (\r\n        <h1 class=\"Title\">Haz completado {completedTodos} de {totalTodos} tareas </h1>\r\n    );\r\n}\r\n\r\nexport { TodoCounter, };\r\n","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoSearch.css'\r\n\r\nfunction TodoSearch (){\r\n\r\n    const { setOpenModal, searchTodos, searchedTodos } = React.useContext(TodoContext);\r\n    \r\n    const onClickButton = ()=>\r\n    {\r\n        setOpenModal( prevState => !prevState )\r\n    }\r\n\r\n    const onChangeInSearch = (event) =>\r\n    {\r\n        searchTodos(event.target.value);\r\n        console.log(searchedTodos);\r\n        console.log(event);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Search\" id=\"test\">\r\n            <div className=\"Search__Form\" >\r\n                <img src={process.env.PUBLIC_URL + \"/searchIcon.svg\"} alt=\"\" className=\"Search__Icon\"/>\r\n                <input type=\"search\" id=\"SearchForm\" className=\"Search__Input\" placeholder=\"Busca tu tarea aquÃ­\" onChange = {onChangeInSearch} />\r\n            </div>\r\n            <img src={process.env.PUBLIC_URL + \"/plusIcon.svg\"} alt=\"\" className=\"Search__PlusButton\" id=\"AddButton\" onClick = {onClickButton} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { TodoSearch, };\r\n","import './Modal.css';\r\n\r\nfunction Modal(props) {\r\n    const onClickCloseButton = () => \r\n    {\r\n        props.setOpenModal( prevState => !prevState )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Modal\" id=\"modal\">\r\n            <div className=\"Modal__Content\">\r\n                <img src={process.env.PUBLIC_URL + \"/closeButton.svg\"} alt=\"\" onClick= { onClickCloseButton } className=\"Modal__CloseButtonIcon\"/>\r\n                <div className=\"CreateTodo\">\r\n                    <p className=\"CreateTodo__Title\">Escribe un nuevo To-Do</p>\r\n                    <textarea className=\"CreateTodo__TextArea\">\r\n                    </textarea>\r\n                    <div className=\"CreateTodo__Buttons\">\r\n                        <button className=\"CreateTodo__Cancel\" type=\"button\">Cancelar</button>\r\n                        <button className=\"CreateTodo__Accept\" type=\"button\">Aceptar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Modal, };","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport  { Modal } from './Modal'\r\n\r\n\r\nfunction TodoModal (props)\r\n{\r\n    return ReactDom.createPortal(\r\n        <Modal setOpenModal = {props.setOpenModal} /> ,\r\n        document.getElementById('Modal')\r\n    );   \r\n}\r\n\r\nexport { TodoModal, };","import { TodoContext } from '../TodoContext';\r\nimport React from 'react';\r\nimport './TodoTask.css'\r\n\r\nfunction TodoTask(props) {\r\n    const { checkTask, deleteTask } = React.useContext(TodoContext);\r\n    return (\r\n            <div className=\"Task\">\r\n                <img src={process.env.PUBLIC_URL + '/checkIcon.svg'} alt=\"\" className=\"Task__CheckIcon\" onClick={ () => checkTask(props.taskDescription) }/>\r\n                <input class=\"Task__Check\" type=\"checkbox\" value=\"\" checked={props.isDone}/>\r\n                <div className=\"Task__Description\">\r\n                    <p>{props.taskDescription}</p>\r\n                </div>\r\n                <img src={process.env.PUBLIC_URL + '/deleteIcon.svg'} alt=\"\" width=\"10px\" className=\"Task__DeleteIcon\" onClick = {() => deleteTask(props.taskDescription)} />\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport { TodoTask, };","import { TodoTask } from '../TodoTask';\r\nimport './TodoTaskList.css'\r\n\r\nfunction TodoTaskList (props){\r\n    return(\r\n        <div className=\"TasksContainer\">\r\n            <TodoTask  taskDescription = {props.todoTask.description} isDone = {props.todoTask.completed} markTaskAsDone = {props.markTaskAsDone} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { TodoTaskList, };","import { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { TodoModal } from '../TodoModal';\r\nimport { TodoTaskList } from '../TodoTaskList';\r\nimport React from 'react';\r\n\r\nfunction AppUI() {\r\n    const { openModal,\r\n        setOpenModal,\r\n        searchedTodos,\r\n        checkTask\r\n    } = React.useContext(TodoContext);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n    \r\n            {searchedTodos.map( (todo) => {\r\n                    return <TodoTaskList todoTask={todo} markTaskAsDone={checkTask} />;\r\n                })\r\n            }\r\n            {openModal && <TodoModal setOpenModal={setOpenModal} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { AppUI, };","import { AppUI } from './AppUI';\r\nimport { TodoProvider } from '../TodoContext';\r\nimport React from 'react';\r\n\r\nfunction App ()\r\n{\r\n  return(\r\n      <TodoProvider>\r\n        <AppUI/>\r\n      </TodoProvider>\r\n  );\r\n};\r\n\r\nexport { App, } ;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport  { App }  from './App/index';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n "],"sourceRoot":""}